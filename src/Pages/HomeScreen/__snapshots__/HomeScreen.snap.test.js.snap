// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home Screen Component with failed to fetch renders dark mode home screen 1`] = `
<View>
  <Loading
    isVisible={false}
  />
  <View
    style={
      Array [
        Object {
          "justifyContent": "center",
          "marginHorizontal": 16,
        },
        Object {
          "marginTop": 20,
        },
      ]
    }
  >
    <RCTScrollView
      ListEmptyComponent={
        <TextField
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      }
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <TextField
          onLayout={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      </View>
    </RCTScrollView>
  </View>
  <FloatButton
    addButton={true}
    onPress={[Function]}
    style={
      Object {
        "backgroundColor": "#ee6e73",
      }
    }
  />
</View>
`;

exports[`Home Screen Component with failed to fetch renders light mode home screen 1`] = `
<View>
  <Loading
    isVisible={true}
  />
  <View
    style={
      Array [
        Object {
          "justifyContent": "center",
          "marginHorizontal": 16,
        },
        Object {
          "marginTop": 20,
        },
      ]
    }
  >
    <RCTScrollView
      ListEmptyComponent={
        <TextField
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      }
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <TextField
          onLayout={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      </View>
    </RCTScrollView>
  </View>
  <FloatButton
    addButton={true}
    onPress={[Function]}
    style={
      Object {
        "backgroundColor": "#ee6e73",
      }
    }
  />
</View>
`;

exports[`Home Screen Component with loading renders dark mode home screen 1`] = `
<View>
  <Loading
    isVisible={true}
  />
  <View
    style={
      Array [
        Object {
          "justifyContent": "center",
          "marginHorizontal": 16,
        },
        Object {
          "marginTop": 20,
        },
      ]
    }
  >
    <RCTScrollView
      ListEmptyComponent={
        <TextField
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      }
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <TextField
          onLayout={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      </View>
    </RCTScrollView>
  </View>
  <FloatButton
    addButton={true}
    onPress={[Function]}
    style={
      Object {
        "backgroundColor": "#ee6e73",
      }
    }
  />
</View>
`;

exports[`Home Screen Component with loading renders light mode home screen 1`] = `
<View>
  <Loading
    isVisible={true}
  />
  <View
    style={
      Array [
        Object {
          "justifyContent": "center",
          "marginHorizontal": 16,
        },
        Object {
          "marginTop": 20,
        },
      ]
    }
  >
    <RCTScrollView
      ListEmptyComponent={
        <TextField
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      }
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <TextField
          onLayout={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      </View>
    </RCTScrollView>
  </View>
  <FloatButton
    addButton={true}
    onPress={[Function]}
    style={
      Object {
        "backgroundColor": "#ee6e73",
      }
    }
  />
</View>
`;

exports[`Home Screen Component with successfully fetch renders dark mode home screen 1`] = `
<View>
  <Loading
    isVisible={false}
  />
  <View
    style={
      Array [
        Object {
          "justifyContent": "center",
          "marginHorizontal": 16,
        },
        Object {
          "marginTop": 20,
        },
      ]
    }
  >
    <RCTScrollView
      ListEmptyComponent={
        <TextField
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      }
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      data={
        Array [
          Object {
            "age": 12,
            "firstName": "Marfin",
            "isFirstLetter": true,
            "lastName": "Fadhilah",
            "photo": "example",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <HeaderList>
            M
          </HeaderList>
          <Card
            onPress={[Function]}
            style={
              Object {
                "borderRadius": 5,
                "elevation": 2,
                "marginBottom": 8,
                "marginTop": 8,
                "padding": 10,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                  "marginLeft": 12,
                  "marginTop": -10,
                }
              }
            >
              <TextField
                textStyle={
                  Object {
                    "fontSize": 20,
                    "marginTop": 5,
                  }
                }
              >
                Marfin Fadhilah
              </TextField>
            </View>
          </Card>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <FloatButton
    addButton={true}
    onPress={[Function]}
    style={
      Object {
        "backgroundColor": "#ee6e73",
      }
    }
  />
</View>
`;

exports[`Home Screen Component with successfully fetch renders light mode home screen 1`] = `
<View>
  <Loading
    isVisible={true}
  />
  <View
    style={
      Array [
        Object {
          "justifyContent": "center",
          "marginHorizontal": 16,
        },
        Object {
          "marginTop": 20,
        },
      ]
    }
  >
    <RCTScrollView
      ListEmptyComponent={
        <TextField
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
          textStyle={
            Object {
              "fontSize": 11,
              "fontStyle": "italic",
              "marginTop": 10,
            }
          }
        >
          The list data is empty
        </TextField>
      }
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      data={
        Array [
          Object {
            "age": 12,
            "firstName": "Marfin",
            "isFirstLetter": true,
            "lastName": "Fadhilah",
            "photo": "example",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <HeaderList>
            M
          </HeaderList>
          <Card
            onPress={[Function]}
            style={
              Object {
                "borderRadius": 5,
                "elevation": 2,
                "marginBottom": 8,
                "marginTop": 8,
                "padding": 10,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                  "marginLeft": 12,
                  "marginTop": -10,
                }
              }
            >
              <TextField
                textStyle={
                  Object {
                    "fontSize": 20,
                    "marginTop": 5,
                  }
                }
              >
                Marfin Fadhilah
              </TextField>
            </View>
          </Card>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <FloatButton
    addButton={true}
    onPress={[Function]}
    style={
      Object {
        "backgroundColor": "#ee6e73",
      }
    }
  />
</View>
`;
